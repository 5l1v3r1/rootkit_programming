Module Description:

This kernel module implements a rudimentary port knocking feature. 
It takes 3 arguments as inputs:
	-> The local port of the service that we want to hide. (The service must be running)
	-> The IP address from which connections are accepted. 
	-> The protocol (TCP or UDP). If no protocol is specified, the module defaults to using TCP. 

Tested in Linux Debian 3.16.4 x86_64.

Files inside :
        1. port_knocking.c and other source-/header-files - the LKM
        2. gensysmap.sh - bash script to generate sysmap.h
        3. Makefile - the Makefile
        4. README - what you are reading right now

How to use:


1. Build the LKM.
        $ make
        > rootkit_group4.ko and other object files will be created.

2. (Optional step) : Check the running services
	One way of doing is running nmap on another machine and checking our IP. Use a TCP scan (e.g. -sS or -sF) to check for open TCP ports and -sU to check for open UDP ports. It might make sense to limit the checked ports to only the port which has port knocking enabled. The checked port should show up as open.

3. Load the  LKM.
        $ insmod rootkit_group4.ko ipv4=###.###.###.### port=<port_number> protocol=<tcp|udp>
     	where ### is in the range of 0-255. The Protocol option can be skipped for TCP use.
	

4. Verification: 
	The hidden service should only be reachable for the specified ip address. 
	nmap on the specified ip: The port should show up as open.
	nmap on any other ip: The port should show up as closed.

5. Unload the module
        $ rmmod rootkit_group4

